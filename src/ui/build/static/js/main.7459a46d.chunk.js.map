{"version":3,"sources":["utils/useLocalStorage.js","utils/useRequest.js","auth/auth.js","utils/useSafeState.js","utils/useRequestRunner.js","components/EntryEditor/Fields/FileOne.js","components/EntryEditor/Fields/FileMulti.js","components/EntryEditor/Fields/index.js","components/EntryEditor/Fields/RelationOne.js","components/EntryEditor/EditorForm.js","components/EntryEditor/EditorInfo.js","components/EntryEditor/index.js","utils/GenerateYup.js","components/Pagination.js","components/ListEntries.js","components/ContentType.js","Layout.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","_loadedState","useMemo","s","localStorage","getItem","JSON","parse","setItem","stringify","useState","isInitialized","value","state","_setState","newState","Object","is","useRequest","apiUrl","jwt","auth","useContext","AuthConext","handler","send","url","body","method","headers","a","axios","data","Authorization","response","code","logout","Error","message","list","page","get","id","create","update","delete","React","createContext","AuthBackend","children","user","authState","setAuthState","request","useCallback","login","username","password","register","name","email","Provider","useSafeState","setState","isAttachedRef","useRef","setStateSafe","current","useEffect","useRequestRunner","defaultRequest","initialResult","error","result","isLoading","isSuccess","runError","fn","Promise","console","log","runResult","runningRef","runStatus","promise","run","requestFn","isDisplayable","setError","setResult","FileOne","onChange","dragOver","setDragOver","uploadsApi","uploadHandler","v","handleDrag","event","preventDefault","dataTransfer","items","length","kind","formData","FormData","append","files","target","bg","borderRadius","overflow","borderColor","ratio","filename","position","h","w","src","msg","color","p","size","ArrowUp","fontSize","onDragOver","onDragLeave","onDrop","zIndex","connect","formik","schema","values","Array","isArray","colSpan","minW","allowMultiple","flex","textAlign","pb","templateColumns","sm","lg","gap","mb","map","i","setFieldValue","onClick","ConnectSchemaField","EditComponent","isCreating","props","disabled","auto","readonly","as","placeholder","required","private","FieldComponentMap","default","Input","type","bool","colorScheme","isChecked","enum","relation_one","getSchema","SchemaContext","modelSchema","model","contentHandler","primary","entities","optionList","e","display","relation_many","display_info","model_display","file","file_multi","FileMulti","EditorForm","contentApi","history","useHistory","keys","fields","SchemaField","justifyContent","goBack","EditorInfo","fontWeight","f","InfoField","Text","ml","EntryEditor","useParams","toast","useToast","title","description","status","duration","isClosable","resetError","editorContext","FormikWrapper","variant","direction","xl","alignItems","formikInitialValues","initVals","forEach","field","validationSchema","fieldSchema","yup","GenerateYup","initialValues","onSubmit","replace","Pagination","max","onSelect","parseInt","pagerCount","offset","mx","icon","ArrowLeft","apply","_","ArrowRight","ListEntries","URLSearchParams","location","search","entryCount","setEntryCount","count","displayFormatter","json","String","names","filter","n","isLoaded","Math","ceil","push","editable","aria-label","pathname","ContentType","match","path","exact","Layout","schemaHandler","minH","left","px","top","to","mr","pl","visible","Login","bgColor","mt","LoginForm","shape","setErrors","redirect","spacing","component","pt","isSubmitting","SchemaBackend","find","x","App","basename","Consumer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7459a46d.chunk.js","sourcesContent":["import { useMemo, useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n  const _loadedState = useMemo(() => {\n    let s = initialValue;\n    try {\n      const rs = localStorage.getItem(key);\n      if (rs) s = JSON.parse(localStorage.getItem(key));\n      else localStorage.setItem(key, JSON.stringify(initialValue));\n    } catch {\n      localStorage.setItem(key, JSON.stringify(initialValue));\n    }\n    return s;\n    // eslint-disable-next-line\n  }, []);\n\n  const [state, _setState] = useState({\n    isInitialized: true,\n    value: _loadedState,\n  });\n\n  const setState = (newState) => {\n    if (!Object.is(state.value, newState)) {\n      newState =\n        typeof newState === \"function\" ? newState(state.value) : newState;\n      localStorage.setItem(key, JSON.stringify(newState));\n      _setState({ ...state, value: newState });\n    }\n  };\n\n  return [state.value, setState];\n};\n\nexport default useLocalStorage;\n","import axios from \"axios\";\nimport { useContext, useMemo } from \"react\";\nimport { AuthConext } from \"../auth/auth\";\n\nexport default function useRequest(apiUrl, jwt = null) {\n  const auth = useContext(AuthConext);\n\n  const handler = useMemo(() => {\n    const send = async (url, body, method, headers) => {\n      try {\n        const response = await axios({\n          method,\n          url,\n          data: body,\n          headers:\n            jwt || auth?.jwt\n              ? { Authorization: \"Bearer \" + (jwt || auth?.jwt), ...headers }\n              : { ...headers },\n        });\n        return response.data;\n      } catch (err) {\n        if (err.code === \"401\") {\n          auth.logout();\n        }\n        if (\n          err.response &&\n          err.response.data &&\n          typeof err.response.data === \"object\"\n        ) {\n          throw new Error(err.response.data.message);\n        }\n        throw new Error(\"Server is not available.\");\n      }\n    };\n\n    return {\n      list: async (page = null) =>\n        send(apiUrl + (page ? `?page=${page}` : \"\"), null, \"GET\"),\n      get: async (id) => send(apiUrl + \"/\" + id, null, \"GET\"),\n      create: async (data) => send(apiUrl, data, \"POST\"),\n      update: async (data, id = null) =>\n        send(apiUrl + \"/\" + (id == null ? data.id : id), data, \"PUT\"),\n      delete: async (id) =>\n        send(\n          apiUrl + \"/\" + (typeof id === \"object\" ? id.id : id),\n          null,\n          \"DELETE\"\n        ),\n      send: async (url, data, method = \"GET\", headers = {}) =>\n        send(apiUrl + \"/\" + url, data, method, headers),\n    };\n  }, [apiUrl, auth, jwt]);\n\n  return handler;\n}\n","import React, { useCallback } from \"react\";\nimport useLocalStorage from \"../utils/useLocalStorage\";\nimport useRequest from \"../utils/useRequest\";\n\nexport const AuthConext = React.createContext({});\n\nexport function AuthBackend({ children }) {\n  const [authState, setAuthState] = useLocalStorage(\"auth-state\", {\n    user: null,\n    jwt: null,\n  });\n\n  const request = useRequest(\"/api/auth\", authState.jwt);\n\n  const logout = useCallback(\n    function () {\n      setAuthState({ user: null, jwt: null });\n    },\n    [setAuthState]\n  );\n\n  const login = async function (username, password) {\n    logout();\n    const user = await request.send(\"login\", { username, password }, \"POST\");\n    setAuthState({ user: user.user, jwt: user.jwt });\n  };\n\n  const register = async function (data) {\n    logout();\n    const user = await request.send(\n      \"register\",\n      {\n        username: data.username,\n        password: data.password,\n        name: data.name,\n        email: data.email,\n      },\n      \"POST\"\n    );\n    setAuthState({ user: user.user, jwt: user.jwt });\n  };\n\n  // Token renewal\n  /*const tokenExpiration =\n    authState.jwt && JSON.parse(atob(authState.jwt.split(\".\")[1])).exp;\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (!tokenExpiration) return;\n      if (tokenExpiration < +new Date()) {\n        logout();\n      } else if (\n        tokenExpiration <= +new Date() + 1000 * 120 &&\n        tokenExpiration >= +new Date()\n      ) {\n        try {\n          const response = await request.send(\"renew\", null, \"GET\");\n          setAuthState((state) => ({ ...state, jwt: response.jwt }));\n        } catch {}\n      }\n    }, 1000 * 6);\n    return () => clearInterval(interval);\n  }, [logout, request, setAuthState, tokenExpiration]);*/\n\n  return (\n    <AuthConext.Provider\n      value={{\n        user: authState.user,\n        jwt: authState.jwt,\n        login,\n        logout,\n        register,\n      }}\n    >\n      {children}\n    </AuthConext.Provider>\n  );\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\n/**\n * useSafeState is a wrapper hook for react useState\n * disables state updates on deattached components\n * @param {any} initialValue Initial value of useState\n * @returns state object and setState function\n */\n\nexport default function useSafeState(initialValue) {\n  const [state, setState] = useState(initialValue);\n\n  const isAttachedRef = useRef(false);\n\n  const setStateSafe = useCallback(\n    (value) => {\n      if (isAttachedRef.current) setState(value);\n    },\n    [setState, isAttachedRef]\n  );\n\n  useEffect(() => {\n    isAttachedRef.current = true;\n    return () => void (isAttachedRef.current = false);\n  }, [isAttachedRef]);\n\n  return [state, setStateSafe];\n}\n","import { useCallback, useRef } from \"react\";\nimport useSafeState from \"./useSafeState\";\n\n/**\n * Promise handler hook, that handles results, errors and pending state of promises.\n * \n * @param {() => Promise<Object>} defaultRequest default request function\n * @param {*} initialResult Initial value of result\n * \n * @typedef RequestRunnerObj\n * @type {object}\n * \n * @prop {boolean} isLoading \n * True if a watched promise is pending\n * \n * @prop {boolean} isSuccess\n * True if the watched promise is resolved succesfully\n * \n * @prop {boolean} isDisplayable\n * True if not loading and has no error\n * \n * @prop {string|null} error\n * Message of the last caught error. \n * Null if there was no error.\n * \n * @prop {Object} result\n * Result of the last watched promise.\n * \n * @prop {(fn = null) => Promise<Object>} run \n * Runs the given handler or the default handler if not provided.\n * Watches pending state, errors and result.\n * \n * @prop {(fn = null) => Promise<Object>} runError\n * Runs the given handler or the default handler if not provided. \n * Set isLoading member pased on promise status. \n * If an error occures, stores the message and returns null.\n * Stores the result if the promise resolves successfully.\n * \n * @prop {} runResult\n * Runs the given handler or the default handler if not provided.\n * Stores the result if the promise resolves successfully.\n * \n * @prop {} runStatus\n * Runs the given handler or the default handler if not provided.\n * Set isLoading member pased on promise status. \n * \n * @prop {Function} setError\n * Manually update error.\n * \n * @prop {Function} setResult\n * Manually update result.\n  \n * \n * @returns {RequestRunnerObj}\n */\n\nexport default function useRequestRunner(\n  defaultRequest = null,\n  initialResult = null\n) {\n  const [state, setState] = useSafeState({\n    error: null,\n    result: initialResult,\n    isLoading: false,\n    isSuccess: false,\n  });\n\n  const runError = useCallback(\n    async (fn = null) => {\n      try {\n        if (typeof fn === \"function\") fn = await fn();\n        if (fn instanceof Promise) fn = await fn;\n        console.log(\"error\", fn);\n        return fn;\n      } catch (ex) {\n        setState((s) => ({ ...s, error: ex.message }));\n        return null;\n      }\n    },\n    [setState]\n  );\n\n  const runResult = useCallback(\n    async (fn = null) => {\n      try {\n        let result = null;\n        if (typeof fn === \"function\") result = await fn();\n        else result = await fn;\n        setState((s) => ({ ...s, result: result }));\n        return result;\n      } catch (ex) {\n        throw ex;\n      }\n    },\n    [setState]\n  );\n\n  const runningRef = useRef(null);\n  const runStatus = useCallback(\n    async (fn) => {\n      console.log(fn);\n      const promise = fn instanceof Promise ? fn : (async () => await fn())();\n      runningRef.current = promise;\n      try {\n        setState((s) => ({ ...s, isLoading: true, isSuccess: false }));\n        const result = await promise;\n        setState((s) => ({ ...s, isLoading: false, isSuccess: true }));\n        console.log(\"error\", result);\n        return result;\n      } catch (ex) {\n        if (runningRef.current === promise) runningRef.current = null;\n        setState((s) => ({ ...s, isLoading: false, isSuccess: false }));\n        throw ex;\n      }\n    },\n    [setState, runningRef]\n  );\n\n  const run = useCallback(\n    async (requestFn = null) => {\n      if (requestFn == null) requestFn = defaultRequest;\n      return runError(() => runStatus(() => runResult(requestFn)));\n    },\n    [defaultRequest, runResult, runError, runStatus]\n  );\n\n  return {\n    isLoading: state.isLoading,\n    result: state.result,\n    error: state.error,\n    isSuccess: state.isSuccess,\n    isDisplayable: !state.isLoading && !state.error,\n    run: run,\n    runError: runError,\n    runResult: runResult,\n    runStatus: runStatus,\n    setError: (error = null) =>\n      setState((s) => ({\n        ...s,\n        error: error instanceof Error ? error.message : error,\n      })),\n    setResult: (result = null) => setState((s) => ({ ...s, result: result })),\n  };\n}\n","import { ArrowUpIcon } from \"@chakra-ui/icons\";\nimport { AspectRatio, Box, Center, Image, Spinner } from \"@chakra-ui/react\";\nimport { ErrorMessage } from \"formik\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport useRequest from \"../../../utils/useRequest\";\nimport useRequestRunner from \"../../../utils/useRequestRunner\";\n\nexport default function FileOne({ name, value, onChange }) {\n  const [dragOver, setDragOver] = useState(false);\n\n  const uploadsApi = useRequest(\"/api/file-upload\");\n  const uploadHandler = useRequestRunner();\n\n  useEffect(() => {\n    const v = value && typeof value == \"object\" ? value.id : value;\n    if (v) uploadHandler.run(uploadsApi.get(v));\n  }, [value]);\n\n  const handleDrag = useCallback(\n    async (event) => {\n      console.log(event);\n      event.preventDefault();\n      setDragOver(false);\n\n      if (\n        event.dataTransfer.items &&\n        event.dataTransfer.items.length === 1 &&\n        event.dataTransfer.items[0].kind === \"file\"\n      ) {\n        const formData = new FormData();\n        formData.append(\"file\", event.dataTransfer.files[0]);\n\n        const result = await uploadHandler.run(\n          uploadsApi.send(\"upload\", formData, \"POST\", {\n            \"Content-Type\": \"multipart/form-data\",\n          })\n        );\n        if (onChange) {\n          onChange({ target: { value: result.id, name: name } });\n        }\n      }\n    },\n    [setDragOver]\n  );\n\n  return (\n    <AspectRatio\n      bg={\"gray.800\"}\n      borderRadius={4}\n      overflow=\"hidden\"\n      borderColor=\"gray.500\"\n      ratio={16 / 9}\n    >\n      <Box>\n        {uploadHandler.result && uploadHandler.result.filename && (\n          <Center position=\"absolute\" h=\"100%\" w=\"100%\">\n            <Image src={uploadHandler.result.filename} />\n          </Center>\n        )}\n        <ErrorMessage name={name}>\n          {(msg) => (\n            <Box\n              w=\"100%\"\n              h=\"100%\"\n              bg=\"red.800\"\n              color=\"white\"\n              p={4}\n              children={msg}\n              position=\"absolute\"\n            />\n          )}\n        </ErrorMessage>\n        {uploadHandler.isLoading && (\n          <Center position=\"absolute\" h=\"100%\" w=\"100%\">\n            <Spinner size=\"lg\" color=\"white\" />\n          </Center>\n        )}\n        {dragOver && (\n          <Center\n            position=\"absolute\"\n            h=\"100%\"\n            w=\"100%\"\n            bg={dragOver ? \"#88888866\" : null}\n          >\n            <ArrowUpIcon color=\"white\" fontSize={100} />\n          </Center>\n        )}\n        <Box\n          w=\"100%\"\n          h=\"100%\"\n          onDragOver={(event) => {\n            event.preventDefault();\n            setDragOver(true);\n          }}\n          onDragLeave={() => setDragOver(false)}\n          onDrop={handleDrag}\n          position=\"absolute\"\n          zIndex={1000}\n        />\n      </Box>\n    </AspectRatio>\n  );\n}\n","import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  GridItem,\n} from \"@chakra-ui/react\";\nimport { connect } from \"formik\";\nimport FileOne from \"./FileOne\";\n\nfunction FileMulti({ formik, schema, onChange }) {\n  const name = schema.key;\n  console.log(formik);\n\n  let value = formik.values[name];\n  value = Array.isArray(value) ? value : [];\n\n  return (\n    <GridItem colSpan={4}>\n      <FormControl minW=\"20%\">\n        <Accordion allowMultiple>\n          <AccordionItem>\n            <h2>\n              <AccordionButton>\n                <Box flex=\"1\" textAlign=\"left\">\n                  {schema.name}\n                </Box>\n                <AccordionIcon />\n              </AccordionButton>\n            </h2>\n            <AccordionPanel pb={4}>\n              <Grid\n                templateColumns={{\n                  sm: \"repeat(1, 1fr)\",\n                  lg: \"repeat(2, 1fr)\",\n                  \"2xl\": \"repeat(3, 1fr)\",\n                }}\n                flex={1}\n                gap={6}\n                mb={6}\n              >\n                {value.map((v, i) => (\n                  <FileOne\n                    key={i}\n                    value={v}\n                    name={`${name}[${i}]`}\n                    onChange={(event) =>\n                      formik.setFieldValue(\n                        event.target.name,\n                        event.target.value\n                      )\n                    }\n                  />\n                ))}\n              </Grid>\n              <Button\n                onClick={() =>\n                  formik.setFieldValue(`${name}[${value.length}]`, null)\n                }\n              >\n                New\n              </Button>\n            </AccordionPanel>\n          </AccordionItem>\n        </Accordion>\n      </FormControl>\n    </GridItem>\n  );\n}\n\nexport default connect(FileMulti);\n","import {\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Switch,\n  Text,\n} from \"@chakra-ui/react\";\nimport { connect, Field } from \"formik\";\nimport React from \"react\";\nimport FileMulti from \"./FileMulti\";\nimport FileOne from \"./FileOne\";\nimport RelationOne from \"./RelationOne\";\n\nfunction ConnectSchemaField(EditComponent) {\n  return connect(({ schema, isCreating, ...props }) => {\n    const disabled = isCreating ? schema.auto : schema.readonly;\n    if (schema.auto && schema.readonly) return null;\n    return (\n      EditComponent && (\n        <FormControl minW=\"20%\">\n          <FormLabel>{schema.name}</FormLabel>\n          <Field\n            as={EditComponent}\n            name={schema.key}\n            placeholder={schema.name}\n            disabled={disabled}\n            schema={schema}\n            required={\n              !disabled && schema.required && (!schema.private || isCreating)\n            }\n            {...props}\n          />\n        </FormControl>\n      )\n    );\n  });\n}\n\nexport const FieldComponentMap = {\n  default: ConnectSchemaField(Input),\n  password: ConnectSchemaField(({ name, formik, ...props }) => (\n    <Input type=\"password\" name={name} value={formik.values[name]} {...props} />\n  )),\n  bool: ConnectSchemaField(({ formik, name, ...props }) => (\n    <Switch\n      size=\"lg\"\n      colorScheme=\"red\"\n      {...props}\n      log={console.log(formik)}\n      isChecked={formik.values && formik.values[name]}\n      onChange={() =>\n        formik.setFieldValue(name, !(formik.values && formik.values[name]))\n      }\n    />\n  )),\n  enum: ConnectSchemaField(({ schema, placeholder, ...props }) => (\n    <Select {...props}>\n      {schema.values.map((v) => (\n        <option value={v}>{v}</option>\n      ))}\n    </Select>\n  )),\n  relation_one: ConnectSchemaField(RelationOne),\n  relation_many: false,\n  email: ConnectSchemaField((props) => <Input type=\"email\" {...props} />),\n  display_info: connect(({ name, formik, schema, ...props }) => {\n    const v = formik.values && formik.values[name];\n    return (\n      <Text {...props}>\n        {v && typeof v === \"object\" ? v[schema.model_display] : v}\n        {!v && \"-\"}\n      </Text>\n    );\n  }),\n  file: ConnectSchemaField(FileOne),\n  file_multi: FileMulti,\n};\n","import { Select, Skeleton } from \"@chakra-ui/react\";\nimport React, { useContext, useEffect, useMemo } from \"react\";\nimport useRequest from \"../../../utils/useRequest\";\nimport { SchemaContext } from \"./../../../App\";\nimport useRequestRunner from \"./../../../utils/useRequestRunner\";\n\nexport default function RelationOne({ schema, placeholder, value, ...props }) {\n  const getSchema = useContext(SchemaContext);\n  const modelSchema = useMemo(() => getSchema(schema.model), [\n    getSchema,\n    schema,\n  ]);\n\n  const contentHandler = useRequestRunner(\n    useRequest(\n      `/admin/content-manager/${schema.model}${\n        value ? `?${modelSchema.primary}_sort=${value}` : \"\"\n      }`\n    ).list\n  );\n  useEffect(contentHandler.run, [schema]);\n\n  if (value && typeof value === \"object\") value = value[schema.primary];\n\n  const entities = contentHandler.result;\n  const optionList = useMemo(\n    () =>\n      modelSchema &&\n      entities &&\n      entities.map((e) => (\n        <option key={e[modelSchema.primary]} value={e[modelSchema.primary]}>\n          {e[modelSchema.display]}\n        </option>\n      )),\n    [modelSchema, entities]\n  );\n\n  if (contentHandler.isLoading) return <Skeleton h={8} />;\n\n  return (\n    <Select value={value || \"\"} {...props}>\n      <option value=\"\">-</option>\n      {optionList}\n    </Select>\n  );\n}\n","import { Box, Button, Grid, HStack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { FieldComponentMap } from \"./Fields\";\n\nexport default function EditorForm({\n  schema,\n  isCreating,\n  contentHandler,\n  contentApi,\n  id,\n}) {\n  const history = useHistory();\n\n  return (\n    <Box p={4} bg=\"white\" flex={1}>\n      <Grid\n        templateColumns={{\n          sm: \"repeat(1, 1fr)\",\n          lg: \"repeat(2, 1fr)\",\n          \"2xl\": \"repeat(3, 1fr)\",\n        }}\n        flex={1}\n        gap={6}\n        mb={6}\n      >\n        {Object.keys(schema.fields).map((fn) => (\n          <SchemaField\n            key={fn}\n            schema={schema.fields[fn]}\n            isCreating={isCreating}\n          />\n        ))}\n      </Grid>\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        {!isCreating && (\n          <Button\n            type=\"button\"\n            colorScheme=\"red\"\n            onClick={async () => {\n              await contentHandler.run(contentApi.delete(id));\n              history.goBack();\n            }}\n          >\n            Delete\n          </Button>\n        )}\n        <Button type=\"submit\" colorScheme=\"green\">\n          Save\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nfunction SchemaField(props) {\n  const EditComponent =\n    FieldComponentMap[props.schema.type] ?? FieldComponentMap.default;\n\n  if (EditComponent) return <EditComponent {...props} />;\n  return null;\n}\n","import { Box, FormControl, FormLabel, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { FieldComponentMap } from \"./Fields\";\n\nexport default function EditorInfo({ schema }) {\n  return (\n    <Box minW=\"350px\" p={4} bg=\"white\">\n      <Text fontWeight=\"bold\" fontSize={20}>\n        Information\n      </Text>\n      {Object.keys(schema.fields).map((f) => (\n        <InfoField schema={schema.fields[f]} key={f} />\n      ))}\n    </Box>\n  );\n}\n\nfunction InfoField({ schema }) {\n  const EditComponent = FieldComponentMap.display_info;\n  if (schema.auto && schema.readonly)\n    return (\n      EditComponent && (\n        <FormControl>\n          <FormLabel>{schema.name}</FormLabel>\n          <EditComponent\n            as={Text}\n            name={schema.key}\n            disabled={true}\n            schema={schema}\n            color=\"gray.800\"\n            fontSize=\"14\"\n            ml={4}\n          />\n        </FormControl>\n      )\n    );\n  return null;\n}\n","import { Box, Button, HStack, Stack, Text, useToast } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { default as React, useEffect, useMemo } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport GenerateYup from \"../../utils/GenerateYup\";\nimport useRequest from \"../../utils/useRequest\";\nimport useRequestRunner from \"./../../utils/useRequestRunner\";\nimport EditorForm from \"./EditorForm\";\nimport EditorInfo from \"./EditorInfo\";\n\nexport default function EntryEditor({ isCreating, schema }) {\n  const { model, id } = useParams();\n  const history = useHistory();\n  const contentApi = useRequest(`/admin/content-manager/${model}`);\n\n  const toast = useToast();\n\n  const contentHandler = useRequestRunner(() => contentApi.get(id), []);\n  useEffect(() => {\n    if (!contentHandler.error) return;\n    toast({\n      title: \"Server error\",\n      description: contentHandler.error,\n      status: \"error\",\n      duration: 9000,\n      isClosable: true,\n    });\n    contentHandler.setError(null);\n    //eslint-disable-next-line\n  }, [contentHandler.error, contentHandler.resetError, toast]);\n\n  useEffect(() => {\n    if (!isCreating) contentHandler.run();\n    //eslint-disable-next-line\n  }, [isCreating, id]);\n\n  const editorContext = {\n    isCreating,\n    history,\n    schema,\n    id,\n    contentHandler,\n    contentApi,\n  };\n\n  return (\n    <>\n      <Box>\n        <Text fontSize={40} mb={4}>\n          {contentHandler.result && !isCreating\n            ? `${contentHandler.result[schema.display]} (${schema.name})`\n            : schema.name}\n        </Text>\n        <FormikWrapper {...editorContext}>\n          <HStack mb={6}>\n            <Button\n              colorScheme=\"red\"\n              onClick={() => history.goBack()}\n              variant=\"link\"\n            >\n              Back\n            </Button>\n          </HStack>\n          <Stack\n            flex={1}\n            direction={{ sm: \"column\", xl: \"row\" }}\n            alignItems={{ sm: \"stretch\", xl: \"flex-start\" }}\n          >\n            <EditorForm {...editorContext} />\n            {!isCreating && <EditorInfo {...editorContext} />}\n          </Stack>\n        </FormikWrapper>\n      </Box>\n    </>\n  );\n}\n\nfunction FormikWrapper({\n  children,\n  isCreating,\n  schema,\n  id,\n  contentHandler,\n  contentApi,\n}) {\n  const history = useHistory();\n\n  const formikInitialValues = useMemo(() => {\n    const initVals = {};\n    Object.values(schema.fields).forEach((field) => {\n      if (field.default != null && !field.auto)\n        initVals[field.key] = field.default;\n    });\n    return initVals;\n  }, [schema]);\n\n  const validationSchema = GenerateYup(schema);\n  return (\n    (isCreating || !contentHandler.isLoading) && (\n      <Formik\n        initialValues={isCreating ? formikInitialValues : contentHandler.result}\n        validationSchema={validationSchema}\n        onSubmit={async (data) => {\n          console.log(data);\n\n          const result = await contentHandler.run(\n            isCreating ? contentApi.create(data) : contentApi.update(data, id)\n          );\n          if (!result) return;\n          if (isCreating) {\n            history.replace(\"./\" + result[schema.primary]);\n          }\n        }}\n      >\n        <Form>{children}</Form>\n      </Formik>\n    )\n  );\n}\n","import * as yup from \"yup\";\n\nexport default function GenerateYup(schema) {\n  if (!schema) return null;\n\n  const result = {};\n\n  Object.keys(schema.fields).forEach((key) => {\n    const field = schema.fields[key];\n    let fieldSchema = null;\n\n    switch (field.type) {\n      case \"file_multi\":\n        fieldSchema = yup.array(\n          yup.lazy((value) => {\n            switch (typeof value) {\n              case \"object\":\n                return yup.object({ id: yup.number().required() });\n              default:\n                return yup.number().required();\n            }\n          })\n        );\n        break;\n      default:\n        break;\n    }\n\n    if (fieldSchema) result[key] = fieldSchema;\n  });\n  return yup.object(result);\n}\n","import { ArrowLeftIcon, ArrowRightIcon } from \"@chakra-ui/icons\";\nimport { Button, HStack, IconButton } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport default function Pagination({ page, max, onSelect, colorScheme }) {\n  page = parseInt(page);\n  const pagerCount = max < 10 ? max : 10;\n  const offset =\n    page - pagerCount / 2 < 0\n      ? 0\n      : page + pagerCount / 2 > max\n      ? max - pagerCount\n      : page - pagerCount / 2;\n  if (max === 1 && page === 1) return null;\n  return (\n    <HStack mx=\"auto\" justifyContent=\"center\" w=\"100%\">\n      <IconButton\n        colorScheme={colorScheme}\n        icon={<ArrowLeftIcon />}\n        variant={\"ghost\"}\n        onClick={() => onSelect(1)}\n        disabled={page <= 1}\n      />\n      {Array.apply(null, Array(pagerCount)).map((_, e) => (\n        <Button\n          colorScheme={colorScheme}\n          variant={e + offset + 1 === page ? \"solid\" : \"ghost\"}\n          onClick={() => onSelect(e + offset + 1)}\n          key={e}\n        >\n          {e + offset + 1}\n        </Button>\n      ))}\n      <IconButton\n        colorScheme={colorScheme}\n        icon={<ArrowRightIcon />}\n        variant={\"ghost\"}\n        onClick={() => onSelect(max)}\n        disabled={page >= max}\n      />\n    </HStack>\n  );\n}\n","import {\n  Box,\n  Button,\n  HStack,\n  Skeleton,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport useRequest from \"../utils/useRequest\";\nimport useRequestRunner from \"../utils/useRequestRunner\";\nimport Pagination from \"./Pagination\";\n\nexport default function ListEntries({ schema }) {\n  const { model } = useParams();\n  const history = useHistory();\n  const page = new URLSearchParams(history.location.search).get(\"page\") || 1;\n\n  const contentApi = useRequest(`/admin/content-manager/${model}`);\n  const [entryCount, setEntryCount] = useState(0);\n\n  const contentHandler = useRequestRunner(contentApi.list, []);\n  useEffect(() => {\n    (async () => {\n      const count = await contentHandler.runError(\n        contentHandler.runStatus(contentApi.get(\"count\"))\n      );\n      if (count == null) return;\n      setEntryCount(count);\n      contentHandler.run(\n        contentApi.send(`?_limit=100&_start=${(page - 1) * 100}`)\n      );\n    })();\n    //eslint-disable-next-line\n  }, [page, schema]);\n\n  const displayFormatter = {\n    //timestamp: true,\n    password: false,\n    relation_one: false,\n    relation_many: false,\n    file: false,\n    json: false,\n    bool: (v) => (v ? \"true\" : \"false\"),\n    default: (v) => String(v),\n    file_multi: false,\n  };\n\n  const names =\n    schema &&\n    Object.keys(schema.fields).filter(\n      (n) =>\n        displayFormatter[schema.fields[n].type] !== false &&\n        !schema.fields[n].private\n    );\n\n  return (\n    <Box>\n      <Text fontSize={40} mb={4}>\n        {schema.name}\n      </Text>\n      <Skeleton isLoaded={!contentHandler.isLoading}>\n        <Pagination\n          page={page}\n          max={Math.ceil(entryCount / 100) || 1}\n          colorScheme=\"red\"\n          onSelect={(page) => history.push(\"?page=\" + page)}\n        />\n        <HStack mb={6}>\n          {schema.editable && (\n            <Button\n              colorScheme=\"red\"\n              aria-label=\"Search database\"\n              onClick={() =>\n                history.push(history.location.pathname + \"/create\")\n              }\n              variant=\"link\"\n            >\n              New\n            </Button>\n          )}\n        </HStack>\n        <Table mb={6}>\n          <Thead>\n            <Tr>\n              {names.map((n) => (\n                <Th key={n}>{n}</Th>\n              ))}\n            </Tr>\n          </Thead>\n          <Tbody>\n            {contentHandler.result &&\n              contentHandler.result.map((e, i) => (\n                <Tr\n                  key={e[schema.primary] || i}\n                  onClick={() =>\n                    schema.editable &&\n                    history.push(\n                      history.location.pathname + \"/\" + e[schema.primary]\n                    )\n                  }\n                >\n                  {names.map((n) => (\n                    <Td key={n}>\n                      {(\n                        displayFormatter[schema.fields[n].type] ||\n                        displayFormatter.default\n                      )(e[n])}\n                    </Td>\n                  ))}\n                </Tr>\n              ))}\n          </Tbody>\n        </Table>\n        <Pagination\n          page={page}\n          max={Math.ceil(entryCount / 100) || 1}\n          colorScheme=\"red\"\n          onSelect={(page) => history.push(\"?page=\" + page)}\n        />\n      </Skeleton>\n    </Box>\n  );\n}\n","import React, { useContext, useMemo } from \"react\";\nimport { Route, Switch, useParams } from \"react-router\";\nimport { SchemaContext } from \"../App\";\nimport EntryEditor from \"./EntryEditor\";\nimport ListEntries from \"./ListEntries\";\n\nexport default function ContentType({ match }) {\n  const { model } = useParams();\n  const getSchema = useContext(SchemaContext);\n  const schema = useMemo(() => getSchema(model), [getSchema, model]);\n\n  return (\n    schema && (\n      <Switch>\n        <Route path={`${match.path}/create`}>\n          <EntryEditor key={schema.key} isCreating={true} schema={schema} />\n        </Route>\n        <Route path={`${match.path}/:id`}>\n          <EntryEditor key={schema.key} isCreating={false} schema={schema} />\n        </Route>\n        <Route path={match.path} exact>\n          <ListEntries key={schema.key} schema={schema} />\n        </Route>\n      </Switch>\n    )\n  );\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  Center,\n  HStack,\n  Spinner,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthConext } from \"./auth/auth\";\nimport useRequest from \"./utils/useRequest\";\nimport useRequestRunner from \"./utils/useRequestRunner\";\n\nexport default function Layout({ children }) {\n  const schemaApi = useRequest(`/admin/content-schema/models`);\n  const schemaHandler = useRequestRunner(schemaApi.list);\n  const auth = useContext(AuthConext);\n  useEffect(schemaHandler.run, [auth.user]);\n\n  return (\n    <>\n      {schemaHandler.isLoading && (\n        <Center w=\"100vw\" h=\"100vh\">\n          <Spinner></Spinner>\n        </Center>\n      )}\n      <Box bg=\"gray.100\" minH=\"100vh\" w=\"100%\" overflow=\"visible\">\n        <Box\n          position=\"fixed\"\n          left={0}\n          px={3}\n          w=\"250px\"\n          top={0}\n          minH=\"100%\"\n          bg=\"red.600\"\n          color=\"white\"\n        >\n          <Box fontSize={40} mb={6} w=\"100%\" textAlign=\"center\">\n            <Link to=\"/\">Phroper</Link>\n          </Box>\n\n          {auth.user && (\n            <HStack mb={6}>\n              <Avatar mr={4} />\n              <VStack flex={1} alignItems=\"flex-start\">\n                <Text fontSize={20}>{auth.user.username}</Text>\n                <Button\n                  variant=\"link\"\n                  colorScheme=\"white\"\n                  onClick={auth.logout}\n                >\n                  logout\n                </Button>\n              </VStack>\n            </HStack>\n          )}\n\n          {schemaHandler.isSuccess && (\n            <>\n              <Text fontSize={24} mb={2}>\n                Content types\n              </Text>\n              <VStack pl={4} alignItems=\"flex-start\">\n                {schemaHandler.result\n                  ?.filter((model) => model.visible)\n                  .map((model) => (\n                    <Link key={model.key} to={`/content-type/${model.key}`}>\n                      {model.name}\n                    </Link>\n                  ))}\n              </VStack>\n            </>\n          )}\n        </Box>\n        <Box ml={250} px={4}>\n          {children}\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Box,\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport { ErrorMessage, Field, Form, Formik, FormikConsumer } from \"formik\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router\";\nimport * as yup from \"yup\";\nimport { AuthConext } from \"../auth/auth\";\n\nexport default function Login() {\n  return (\n    <Container minH={10} p={0} bgColor=\"gray.200\" mt=\"10vh\">\n      <Text fontSize={32} p={2} bg=\"red.500\" color=\"white\" mb={4}>\n        Login\n      </Text>\n      <Box p={4}>\n        <LoginForm />\n      </Box>\n    </Container>\n  );\n}\n\nfunction LoginForm() {\n  const auth = useContext(AuthConext);\n  const history = useHistory();\n\n  return (\n    <Formik\n      validationSchema={yup.object().shape({\n        username: yup.string().required(\"Username is required\"),\n        password: yup.string().required(\"Password is required\"),\n      })}\n      initialValues={{\n        username: \"\",\n        password: \"\",\n      }}\n      onSubmit={async (props, { setErrors }) => {\n        try {\n          await auth.login(props.username, props.password);\n\n          let state = history.location.state;\n          while (\n            state &&\n            state.redirect &&\n            state.redirect.pathname === \"/login\"\n          )\n            state = state.redirect.state;\n\n          if (state && state.redirect)\n            history.push(state.redirect.pathname, state.redirect.state);\n          else history.push(\"/\");\n        } catch (err) {\n          setErrors({ password: err.message });\n        }\n      }}\n    >\n      <Form>\n        <Stack spacing={4}>\n          {history.location.state && history.location.state.error && (\n            <Alert status=\"error\">\n              <AlertIcon />\n              <AlertDescription>\n                {history.location.state.error}\n              </AlertDescription>\n            </Alert>\n          )}\n\n          <FormControl>\n            <FormLabel>Username</FormLabel>\n            <Field as={Input} bgColor=\"white\" type=\"text\" name=\"username\" />\n            <ErrorMessage name=\"username\" component={Text} color=\"red\" />\n          </FormControl>\n          <FormControl>\n            <FormLabel>Password</FormLabel>\n            <Field as={Input} bgColor=\"white\" type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component={Text} color=\"red\" />\n          </FormControl>\n\n          <Box textAlign=\"right\" pt={2}>\n            <FormikConsumer>\n              {({ isSubmitting }) => (\n                <Button\n                  isLoading={isSubmitting}\n                  type=\"submit\"\n                  variant=\"solid\"\n                  colorScheme=\"red\"\n                  children=\"Log in\"\n                />\n              )}\n            </FormikConsumer>\n          </Box>\n        </Stack>\n      </Form>\n    </Formik>\n  );\n}\n","import { Center, ChakraProvider, Spinner } from \"@chakra-ui/react\";\nimport React, { useContext, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { AuthBackend, AuthConext } from \"./auth/auth\";\nimport ContentType from \"./components/ContentType\";\nimport Layout from \"./Layout\";\nimport Login from \"./pages/Login\";\nimport useRequest from \"./utils/useRequest\";\nimport useRequestRunner from \"./utils/useRequestRunner\";\n\nexport const SchemaContext = React.createContext();\n\nfunction SchemaBackend({ children }) {\n  const schemaApi = useRequest(`/admin/content-schema/models`);\n  const schemaHandler = useRequestRunner(schemaApi.list, null);\n  const auth = useContext(AuthConext);\n  useEffect(schemaHandler.run, [auth.user]);\n\n  return (\n    <>\n      {schemaHandler.isLoading && (\n        <Center w=\"100vw\" h=\"100vh\">\n          <Spinner></Spinner>\n        </Center>\n      )}\n      {!schemaHandler.isLoading && (\n        <SchemaContext.Provider\n          value={(key) =>\n            schemaHandler.result &&\n            schemaHandler.result.find((x) => x.key === key)\n          }\n        >\n          {children}\n        </SchemaContext.Provider>\n      )}\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Router basename=\"/admin\">\n        <AuthBackend>\n          <AuthConext.Consumer>\n            {(auth) => !auth.user && <Redirect to=\"/login\" />}\n          </AuthConext.Consumer>\n          <SchemaBackend>\n            <Layout>\n              <Switch>\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/content-type/:model\" component={ContentType} />\n              </Switch>\n            </Layout>\n          </SchemaBackend>\n        </AuthBackend>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}