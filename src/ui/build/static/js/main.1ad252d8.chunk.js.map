{"version":3,"sources":["utils/useLocalStorage.js","app/LocationBackend.js","utils/useRequest.js","auth/auth.js","utils/useSafeState.js","utils/useRequestRunner.js","layout/index.js","pages/Login.js","app/SchemaBackend.js","components/AlertButton.js","components/EntryEditor/Fields/DatePickerBase/index.js","components/EntryEditor/Fields/DatePicker.js","components/EntryEditor/Fields/EmbeddedEditor.js","components/EntryEditor/Fields/EmbeddedArray.js","components/EntryEditor/Fields/EmbeddedObject.js","components/EntryEditor/Fields/FileOne.js","components/EntryEditor/Fields/index.js","components/EntryEditor/Fields/Bool.js","components/EntryEditor/Fields/Enum.js","components/EntryEditor/Fields/RelationOne.js","components/EntryEditor/Fields/FileMulti.js","components/EntryEditor/EditorForm.js","components/EntryEditor/EditorInfo.js","components/EntryEditor/index.js","utils/GenerateYup.js","components/Pagination.js","components/ListEntries.js","components/ContentType.js","app/PageRouting.js","app/index.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","_loadedState","useMemo","s","localStorage","getItem","JSON","parse","setItem","stringify","useState","isInitialized","value","state","_setState","newState","Object","is","LocationContext","React","createContext","LocationBackend","children","basename","window","pn","location","pathname","endsWith","includes","split","console","log","Provider","useRequest","apiUrl","jwt","auth","useContext","AuthConext","basePath","handler","send","url","body","method","headers","a","axios","data","Authorization","response","code","logout","Error","message","list","page","get","id","create","update","delete","AuthBackend","user","authState","setAuthState","request","useCallback","login","username","password","register","name","email","useSafeState","setState","isAttachedRef","useRef","setStateSafe","current","useEffect","useRequestRunner","defaultRequest","initialResult","error","result","isLoading","isSuccess","runError","fn","Promise","runResult","runningRef","runStatus","promise","run","requestFn","isDisplayable","setError","setResult","Layout","schemaHandler","w","h","bg","minH","overflow","position","left","px","top","color","fontSize","mb","textAlign","to","mr","flex","alignItems","variant","colorScheme","onClick","pl","filter","model","visible","map","ml","Login","p","bgColor","mt","LoginForm","history","useHistory","validationSchema","yup","shape","required","initialValues","onSubmit","props","setErrors","redirect","push","spacing","status","as","Input","type","component","Text","pt","isSubmitting","SchemaContext","SchemaBackend","find","x","AlertButton","acceptText","cancelText","headerText","isOpen","setIsOpen","onClose","cancelRef","leastDestructiveRef","fontWeight","justifyContent","ref","DatePickerBase","onChange","isClearable","showPopperArrow","selected","Date","dateFormats","date","datetime","timestamp","connect","formik","schema","v","setFieldValue","timeFormat","dateFormat","showTimeSelect","EmbeddedEditor","isCreating","prefix","fields","nf","keys","forEach","k","grid","templateColumns","sm","lg","Math","min","gap","SchemaField","EditComponent","FieldComponentMap","default","EmbeddedArray","values","Array","isArray","borderLeft","borderColor","allowToggle","i","justify","display","e","stopPropagation","slice","disabled","ArrowUp","Delete","length","ArrowDown","pb","EmbeddedObject","FileOne","dragOver","setDragOver","uploadsApi","uploadHandler","handleDrag","event","preventDefault","dataTransfer","items","kind","formData","FormData","append","files","target","borderRadius","ratio","filename","src","msg","size","onDragOver","onDragLeave","onDrop","flexDir","m","ConnectSchemaField","addProps","auto","readonly","colSpan","rowSpan","minW","placeholder","private","textarea","Textarea","resize","bool","isChecked","enum","relation_one","getSchema","modelSchema","contentHandler","primary","entities","optionList","relation_many","file","file_multi","allowMultiple","embedded_object","embedded_array","DatePicker","EditorForm","contentApi","goBack","EditorInfo","f","InfoField","moment","format","model_display","EntryEditor","useParams","toast","useToast","title","description","duration","isClosable","resetError","editorContext","FormikWrapper","direction","xl","formikInitialValues","initVals","field","fieldSchema","GenerateYup","enableReinitialize","replace","Pagination","max","onSelect","parseInt","pagerCount","offset","mx","icon","ArrowLeft","apply","_","ArrowRight","displayFormatter","json","String","relation_multi","ListEntries","URLSearchParams","search","entryCount","setEntryCount","count","names","listing","n","listed","isLoaded","ceil","editable","aria-label","ContentType","match","path","exact","PageRouting","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ad252d8.chunk.js","sourcesContent":["import { useMemo, useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n  const _loadedState = useMemo(() => {\n    let s = initialValue;\n    try {\n      const rs = localStorage.getItem(key);\n      if (rs) s = JSON.parse(localStorage.getItem(key));\n      else localStorage.setItem(key, JSON.stringify(initialValue));\n    } catch {\n      localStorage.setItem(key, JSON.stringify(initialValue));\n    }\n    return s;\n    // eslint-disable-next-line\n  }, []);\n\n  const [state, _setState] = useState({\n    isInitialized: true,\n    value: _loadedState,\n  });\n\n  const setState = (newState) => {\n    if (!Object.is(state.value, newState)) {\n      newState =\n        typeof newState === \"function\" ? newState(state.value) : newState;\n      localStorage.setItem(key, JSON.stringify(newState));\n      _setState({ ...state, value: newState });\n    }\n  };\n\n  return [state.value, setState];\n};\n\nexport default useLocalStorage;\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nexport const LocationContext = React.createContext();\r\n\r\nexport default function LocationBackend({ children }) {\r\n  let basename = \"\";\r\n  if (window) {\r\n    let pn = window.location.pathname;\r\n    if (!pn.endsWith(\"/\")) pn = pn + \"/\";\r\n\r\n    if (pn.includes(\"/admin/\")) basename = pn.split(\"/admin/\")[0];\r\n  }\r\n  basename += \"/admin\";\r\n\r\n  console.log(\"LocationBackend\", basename);\r\n\r\n  return (\r\n    <LocationContext.Provider value={basename}>\r\n      <Router basename={basename}>{children}</Router>\r\n    </LocationContext.Provider>\r\n  );\r\n}\r\n","import axios from \"axios\";\nimport { useContext, useMemo } from \"react\";\nimport { AuthConext } from \"../auth/auth\";\nimport { LocationContext } from \"./../app/LocationBackend\";\n\nexport default function useRequest(apiUrl, jwt = null) {\n  const auth = useContext(AuthConext);\n  const basePath = useContext(LocationContext);\n  apiUrl = basePath + apiUrl;\n\n  const handler = useMemo(() => {\n    const send = async (url, body, method, headers) => {\n      try {\n        const response = await axios({\n          method,\n          url,\n          data: body,\n          headers:\n            jwt || auth?.jwt\n              ? { Authorization: \"Bearer \" + (jwt || auth?.jwt), ...headers }\n              : { ...headers },\n        });\n        return response.data;\n      } catch (err) {\n        if (err.code === \"401\") {\n          auth.logout();\n        }\n        if (\n          err.response &&\n          err.response.data &&\n          typeof err.response.data === \"object\"\n        ) {\n          throw new Error(err.response.data.message);\n        }\n        throw new Error(\"Server is not available.\");\n      }\n    };\n\n    return {\n      list: async (page = null) =>\n        send(apiUrl + (page ? `?page=${page}` : \"\"), null, \"GET\"),\n      get: async (id) => send(apiUrl + \"/\" + id, null, \"GET\"),\n      create: async (data) => send(apiUrl, data, \"POST\"),\n      update: async (data, id = null) =>\n        send(apiUrl + \"/\" + (id == null ? data.id : id), data, \"PUT\"),\n      delete: async (id) =>\n        send(\n          apiUrl + \"/\" + (typeof id === \"object\" ? id.id : id),\n          null,\n          \"DELETE\"\n        ),\n      send: async (url, data, method = \"GET\", headers = {}) =>\n        send(apiUrl + \"/\" + url, data, method, headers),\n    };\n  }, [apiUrl, auth, jwt]);\n\n  return handler;\n}\n","import React, { useCallback } from \"react\";\nimport useLocalStorage from \"../utils/useLocalStorage\";\nimport useRequest from \"../utils/useRequest\";\n\nexport const AuthConext = React.createContext({});\n\nexport function AuthBackend({ children }) {\n  const [authState, setAuthState] = useLocalStorage(\"auth-state\", {\n    user: null,\n    jwt: null,\n  });\n\n  const request = useRequest(\"/api/auth\", authState.jwt);\n\n  const logout = useCallback(\n    function () {\n      setAuthState({ user: null, jwt: null });\n    },\n    [setAuthState]\n  );\n\n  const login = async function (username, password) {\n    logout();\n    const user = await request.send(\"login\", { username, password }, \"POST\");\n    setAuthState({ user: user.user, jwt: user.jwt });\n  };\n\n  const register = async function (data) {\n    logout();\n    const user = await request.send(\n      \"register\",\n      {\n        username: data.username,\n        password: data.password,\n        name: data.name,\n        email: data.email,\n      },\n      \"POST\"\n    );\n    setAuthState({ user: user.user, jwt: user.jwt });\n  };\n\n  // Token renewal\n  /*const tokenExpiration =\n    authState.jwt && JSON.parse(atob(authState.jwt.split(\".\")[1])).exp;\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (!tokenExpiration) return;\n      if (tokenExpiration < +new Date()) {\n        logout();\n      } else if (\n        tokenExpiration <= +new Date() + 1000 * 120 &&\n        tokenExpiration >= +new Date()\n      ) {\n        try {\n          const response = await request.send(\"renew\", null, \"GET\");\n          setAuthState((state) => ({ ...state, jwt: response.jwt }));\n        } catch {}\n      }\n    }, 1000 * 6);\n    return () => clearInterval(interval);\n  }, [logout, request, setAuthState, tokenExpiration]);*/\n\n  return (\n    <AuthConext.Provider\n      value={{\n        user: authState.user,\n        jwt: authState.jwt,\n        login,\n        logout,\n        register,\n      }}\n    >\n      {children}\n    </AuthConext.Provider>\n  );\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\n/**\n * useSafeState is a wrapper hook for react useState\n * disables state updates on deattached components\n * @param {any} initialValue Initial value of useState\n * @returns state object and setState function\n */\n\nexport default function useSafeState(initialValue) {\n  const [state, setState] = useState(initialValue);\n\n  const isAttachedRef = useRef(false);\n\n  const setStateSafe = useCallback(\n    (value) => {\n      if (isAttachedRef.current) setState(value);\n    },\n    [setState, isAttachedRef]\n  );\n\n  useEffect(() => {\n    isAttachedRef.current = true;\n    return () => void (isAttachedRef.current = false);\n  }, [isAttachedRef]);\n\n  return [state, setStateSafe];\n}\n","import { useCallback, useRef } from \"react\";\nimport useSafeState from \"./useSafeState\";\n\n/**\n * Promise handler hook, that handles results, errors and pending state of promises.\n * \n * @param {() => Promise<Object>} defaultRequest default request function\n * @param {*} initialResult Initial value of result\n * \n * @typedef RequestRunnerObj\n * @type {object}\n * \n * @prop {boolean} isLoading \n * True if a watched promise is pending\n * \n * @prop {boolean} isSuccess\n * True if the watched promise is resolved succesfully\n * \n * @prop {boolean} isDisplayable\n * True if not loading and has no error\n * \n * @prop {string|null} error\n * Message of the last caught error. \n * Null if there was no error.\n * \n * @prop {Object} result\n * Result of the last watched promise.\n * \n * @prop {(fn = null) => Promise<Object>} run \n * Runs the given handler or the default handler if not provided.\n * Watches pending state, errors and result.\n * \n * @prop {(fn = null) => Promise<Object>} runError\n * Runs the given handler or the default handler if not provided. \n * Set isLoading member pased on promise status. \n * If an error occures, stores the message and returns null.\n * Stores the result if the promise resolves successfully.\n * \n * @prop {} runResult\n * Runs the given handler or the default handler if not provided.\n * Stores the result if the promise resolves successfully.\n * \n * @prop {} runStatus\n * Runs the given handler or the default handler if not provided.\n * Set isLoading member pased on promise status. \n * \n * @prop {Function} setError\n * Manually update error.\n * \n * @prop {Function} setResult\n * Manually update result.\n  \n * \n * @returns {RequestRunnerObj}\n */\n\nexport default function useRequestRunner(\n  defaultRequest = null,\n  initialResult = null\n) {\n  const [state, setState] = useSafeState({\n    error: null,\n    result: initialResult,\n    isLoading: false,\n    isSuccess: false,\n  });\n\n  const runError = useCallback(\n    async (fn = null) => {\n      try {\n        if (typeof fn === \"function\") fn = await fn();\n        if (fn instanceof Promise) fn = await fn;\n        console.log(\"error\", fn);\n        return fn;\n      } catch (ex) {\n        setState((s) => ({ ...s, error: ex.message }));\n        return null;\n      }\n    },\n    [setState]\n  );\n\n  const runResult = useCallback(\n    async (fn = null) => {\n      try {\n        let result = null;\n        if (typeof fn === \"function\") result = await fn();\n        else result = await fn;\n        setState((s) => ({ ...s, result: result }));\n        return result;\n      } catch (ex) {\n        throw ex;\n      }\n    },\n    [setState]\n  );\n\n  const runningRef = useRef(null);\n  const runStatus = useCallback(\n    async (fn) => {\n      console.log(fn);\n      const promise = fn instanceof Promise ? fn : (async () => await fn())();\n      runningRef.current = promise;\n      try {\n        setState((s) => ({ ...s, isLoading: true, isSuccess: false }));\n        const result = await promise;\n        setState((s) => ({ ...s, isLoading: false, isSuccess: true }));\n        console.log(\"error\", result);\n        return result;\n      } catch (ex) {\n        if (runningRef.current === promise) runningRef.current = null;\n        setState((s) => ({ ...s, isLoading: false, isSuccess: false }));\n        throw ex;\n      }\n    },\n    [setState, runningRef]\n  );\n\n  const run = useCallback(\n    async (requestFn = null) => {\n      if (requestFn == null) requestFn = defaultRequest;\n      return runError(() => runStatus(() => runResult(requestFn)));\n    },\n    [defaultRequest, runResult, runError, runStatus]\n  );\n\n  return {\n    isLoading: state.isLoading,\n    result: state.result,\n    error: state.error,\n    isSuccess: state.isSuccess,\n    isDisplayable: !state.isLoading && !state.error,\n    run: run,\n    runError: runError,\n    runResult: runResult,\n    runStatus: runStatus,\n    setError: (error = null) =>\n      setState((s) => ({\n        ...s,\n        error: error instanceof Error ? error.message : error,\n      })),\n    setResult: (result = null) => setState((s) => ({ ...s, result: result })),\n  };\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  Center,\n  HStack,\n  Spinner,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthConext } from \"../auth/auth\";\nimport useRequest from \"../utils/useRequest\";\nimport useRequestRunner from \"../utils/useRequestRunner\";\n\nexport default function Layout({ children }) {\n  const schemaApi = useRequest(`/content-schema/models`);\n  const schemaHandler = useRequestRunner(schemaApi.list);\n  const auth = useContext(AuthConext);\n  useEffect(schemaHandler.run, [auth.user]);\n\n  return (\n    <>\n      {schemaHandler.isLoading && (\n        <Center w=\"100vw\" h=\"100vh\">\n          <Spinner></Spinner>\n        </Center>\n      )}\n      <Box bg=\"gray.100\" minH=\"100vh\" w=\"100%\" overflow=\"visible\">\n        <Box\n          position=\"fixed\"\n          left={0}\n          px={3}\n          w=\"250px\"\n          top={0}\n          minH=\"100%\"\n          bg=\"red.600\"\n          color=\"white\"\n        >\n          <Box fontSize={40} mb={6} w=\"100%\" textAlign=\"center\">\n            <Link to=\"/\">Phroper</Link>\n          </Box>\n\n          {auth.user && (\n            <HStack mb={6}>\n              <Avatar mr={4} />\n              <VStack flex={1} alignItems=\"flex-start\">\n                <Text fontSize={20}>{auth.user.username}</Text>\n                <Button\n                  variant=\"link\"\n                  colorScheme=\"white\"\n                  onClick={auth.logout}\n                >\n                  logout\n                </Button>\n              </VStack>\n            </HStack>\n          )}\n\n          {schemaHandler.isSuccess && (\n            <>\n              <Text fontSize={24} mb={2}>\n                Content types\n              </Text>\n              <VStack pl={4} alignItems=\"flex-start\">\n                {schemaHandler.result\n                  ?.filter((model) => model.visible)\n                  .map((model) => (\n                    <Link key={model.key} to={`/content-type/${model.key}`}>\n                      {model.name}\n                    </Link>\n                  ))}\n              </VStack>\n            </>\n          )}\n        </Box>\n        <Box ml={250} px={4}>\n          {children}\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Box,\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport { ErrorMessage, Field, Form, Formik, FormikConsumer } from \"formik\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router\";\nimport * as yup from \"yup\";\nimport { AuthConext } from \"../auth/auth\";\n\nexport default function Login() {\n  return (\n    <Container minH={10} p={0} bgColor=\"gray.200\" mt=\"10vh\">\n      <Text fontSize={32} p={2} bg=\"red.500\" color=\"white\" mb={4}>\n        Login\n      </Text>\n      <Box p={4}>\n        <LoginForm />\n      </Box>\n    </Container>\n  );\n}\n\nfunction LoginForm() {\n  const auth = useContext(AuthConext);\n  const history = useHistory();\n\n  return (\n    <Formik\n      validationSchema={yup.object().shape({\n        username: yup.string().required(\"Username is required\"),\n        password: yup.string().required(\"Password is required\"),\n      })}\n      initialValues={{\n        username: \"\",\n        password: \"\",\n      }}\n      onSubmit={async (props, { setErrors }) => {\n        try {\n          await auth.login(props.username, props.password);\n\n          let state = history.location.state;\n          while (\n            state &&\n            state.redirect &&\n            state.redirect.pathname === \"/login\"\n          )\n            state = state.redirect.state;\n\n          if (state && state.redirect)\n            history.push(state.redirect.pathname, state.redirect.state);\n          else history.push(\"/\");\n        } catch (err) {\n          setErrors({ password: err.message });\n        }\n      }}\n    >\n      <Form>\n        <Stack spacing={4}>\n          {history.location.state && history.location.state.error && (\n            <Alert status=\"error\">\n              <AlertIcon />\n              <AlertDescription>\n                {history.location.state.error}\n              </AlertDescription>\n            </Alert>\n          )}\n\n          <FormControl>\n            <FormLabel>Username</FormLabel>\n            <Field as={Input} bgColor=\"white\" type=\"text\" name=\"username\" />\n            <ErrorMessage name=\"username\" component={Text} color=\"red\" />\n          </FormControl>\n          <FormControl>\n            <FormLabel>Password</FormLabel>\n            <Field as={Input} bgColor=\"white\" type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component={Text} color=\"red\" />\n          </FormControl>\n\n          <Box textAlign=\"right\" pt={2}>\n            <FormikConsumer>\n              {({ isSubmitting }) => (\n                <Button\n                  isLoading={isSubmitting}\n                  type=\"submit\"\n                  variant=\"solid\"\n                  colorScheme=\"red\"\n                  children=\"Log in\"\n                />\n              )}\n            </FormikConsumer>\n          </Box>\n        </Stack>\n      </Form>\n    </Formik>\n  );\n}\n","import { Center, Spinner } from \"@chakra-ui/react\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { AuthConext } from \"./../auth/auth\";\r\nimport useRequest from \"./../utils/useRequest\";\r\nimport useRequestRunner from \"./../utils/useRequestRunner\";\r\n\r\nexport const SchemaContext = React.createContext();\r\n\r\nexport default function SchemaBackend({ children }) {\r\n  const schemaApi = useRequest(`/content-schema/models`);\r\n  const schemaHandler = useRequestRunner(schemaApi.list, null);\r\n  const auth = useContext(AuthConext);\r\n  useEffect(schemaHandler.run, [auth.user]);\r\n\r\n  return (\r\n    <>\r\n      {schemaHandler.isLoading && (\r\n        <Center w=\"100vw\" h=\"100vh\">\r\n          <Spinner></Spinner>\r\n        </Center>\r\n      )}\r\n      {!schemaHandler.isLoading && (\r\n        <SchemaContext.Provider\r\n          value={(key) =>\r\n            schemaHandler.result &&\r\n            schemaHandler.result.find((x) => x.key === key)\r\n          }\r\n        >\r\n          {children}\r\n        </SchemaContext.Provider>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  Button,\n  HStack,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\n/**\n * Button that displays an AlertDialog on click.\n * Calls onClick function only if dialog is accepted.\n *\n * @param {object} props\n * @param props.message Body of the Alert dialdog\n * @param props.headerText Header content of Alert dialog\n * @param [props.acceptText=\"Ok\"] Content of accept button\n * @param [props.cancelText=\"Cancel\"] Content of cancel button\n * @param {Function} props.onClick Accept callback of dialog\n */\nexport default function AlertButton({\n  message,\n  children,\n  onClick,\n  acceptText = \"Ok\",\n  cancelText = \"Cancel\",\n  headerText = \"\",\n  ...props\n}) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n\n  return (\n    <>\n      <Button colorScheme=\"red\" {...props} onClick={() => setIsOpen(true)}>\n        {children}\n      </Button>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            {headerText && (\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                {headerText}\n              </AlertDialogHeader>\n            )}\n            <AlertDialogBody>{message}</AlertDialogBody>\n            <AlertDialogFooter>\n              <HStack w=\"100%\" justifyContent=\"space-between\">\n                <Button ref={cancelRef} onClick={onClose}>\n                  {cancelText}\n                </Button>\n                <Button\n                  colorScheme=\"red\"\n                  onClick={(...p) => {\n                    onClose();\n                    if (onClick) onClick(...p);\n                  }}\n                  ml={3}\n                >\n                  {acceptText}\n                </Button>\n              </HStack>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n}\n","import { Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./date-picker.css\";\r\n\r\nconst DatePickerBase = ({\r\n  onChange,\r\n  isClearable = false,\r\n  showPopperArrow = false,\r\n  value,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Box>\r\n      <ReactDatePicker\r\n        type=\"date\"\r\n        selected={typeof value === \"string\" ? new Date(value) : value}\r\n        onChange={onChange}\r\n        isClearable={isClearable}\r\n        showPopperArrow={showPopperArrow}\r\n        {...props}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DatePickerBase;\r\n","import { connect } from \"formik\";\r\nimport DatePickerBase from \"./DatePickerBase/index\";\r\n\r\nconst dateFormats = {\r\n  date: \"yyyy-MM-dd\",\r\n  datetime: \"yyyy-MM-dd HH:mm\",\r\n  timestamp: \"yyyy-MM-dd HH:mm:ss\",\r\n};\r\n\r\nfunction DatePicker({ formik, schema, name, value }) {\r\n  return (\r\n    <DatePickerBase\r\n      name={name}\r\n      onChange={(v) => formik.setFieldValue(name, v)}\r\n      timeFormat=\"HH:mm\"\r\n      dateFormat={dateFormats[schema.type]}\r\n      showTimeSelect={schema.type !== \"date\"}\r\n      value={value}\r\n    />\r\n  );\r\n}\r\n\r\nexport default connect(DatePicker);\r\n","import { Grid } from \"@chakra-ui/react\";\r\nimport React, { useMemo } from \"react\";\r\nimport { FieldComponentMap } from \".\";\r\n\r\nexport default function EmbeddedEditor({ schema, isCreating, prefix }) {\r\n  schema = useMemo(\r\n    () =>\r\n      schema && prefix ? { ...schema, key: `${prefix}.${schema.key}` } : schema,\r\n    [schema, prefix]\r\n  );\r\n\r\n  const fields = useMemo(() => {\r\n    const nf = {};\r\n    Object.keys(schema.fields).forEach((k) => {\r\n      nf[k] = prefix\r\n        ? { ...schema.fields[k], key: `${prefix}.${schema.fields[k].key}` }\r\n        : schema.fields[k];\r\n    });\r\n    return nf;\r\n  }, [schema, prefix]);\r\n\r\n  console.log(\"EmbeddedEditor\", fields);\r\n\r\n  const grid = schema.grid || EmbeddedEditor.grid;\r\n\r\n  return (\r\n    <Grid\r\n      templateColumns={{\r\n        sm: \"repeat(1, 1fr)\",\r\n        lg: `repeat(${Math.min(2, grid[0])}, 1fr)`,\r\n        \"2xl\": `repeat(${Math.min(3, grid[0])}, 1fr)`,\r\n      }}\r\n      flex={1}\r\n      gap={6}\r\n      mb={6}\r\n    >\r\n      {Object.keys(fields).map((fn) => (\r\n        <SchemaField key={fn} schema={fields[fn]} isCreating={isCreating} />\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction SchemaField(props) {\r\n  if (props.schema.visible === false) return null;\r\n  const EditComponent =\r\n    FieldComponentMap[props.schema.type] ?? FieldComponentMap.default;\r\n\r\n  if (EditComponent) return <EditComponent {...props} />;\r\n  return null;\r\n}\r\n\r\nEmbeddedEditor.grid = [3, 1];\r\n","import { ArrowDownIcon, ArrowUpIcon, DeleteIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionIcon,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n  Box,\r\n  Button,\r\n  HStack,\r\n} from \"@chakra-ui/react\";\r\nimport EmbeddedEditor from \"./EmbeddedEditor\";\r\n\r\nexport default function EmbeddedArray({\r\n  formik,\r\n  schema,\r\n  onChange,\r\n  isCreating,\r\n}) {\r\n  console.log(\"EmbeddedSchemaArray\", schema);\r\n  const name = schema.key;\r\n\r\n  let value = formik.values[name];\r\n  value = Array.isArray(value) ? value : [];\r\n\r\n  return (\r\n    <Box pl={3} borderLeft=\"1px solid\" borderColor=\"red.500\">\r\n      <Accordion allowToggle>\r\n        {value.map((v, i) => (\r\n          <AccordionItem key={i}>\r\n            <h2>\r\n              <AccordionButton>\r\n                <HStack w=\"100%\" justify=\"space-between\">\r\n                  <Box flex=\"1\" textAlign=\"left\">\r\n                    {schema.display && v && typeof v === \"object\"\r\n                      ? v[schema.display]\r\n                      : i + 1}\r\n                  </Box>\r\n                  <Box mr={2}>\r\n                    <Button\r\n                      w=\"1em\"\r\n                      h=\"1em\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        formik.setFieldValue(name, [\r\n                          ...value.slice(0, i - 1),\r\n                          value[i],\r\n                          value[i - 1],\r\n                          ...value.slice(i + 1),\r\n                        ]);\r\n                      }}\r\n                      colorScheme=\"red\"\r\n                      variant=\"ghost\"\r\n                      disabled={i === 0}\r\n                    >\r\n                      <ArrowUpIcon />\r\n                    </Button>\r\n                    <Button\r\n                      w=\"1em\"\r\n                      h=\"1em\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        formik.setFieldValue(name, [\r\n                          ...value.slice(0, i),\r\n                          ...value.slice(i + 1),\r\n                        ]);\r\n                      }}\r\n                      colorScheme=\"red\"\r\n                      variant=\"ghost\"\r\n                    >\r\n                      <DeleteIcon />\r\n                    </Button>\r\n                    <Button\r\n                      w=\"1em\"\r\n                      h=\"1em\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        formik.setFieldValue(name, [\r\n                          ...value.slice(0, i),\r\n                          value[i + 1],\r\n                          value[i],\r\n                          ...value.slice(i + 2),\r\n                        ]);\r\n                      }}\r\n                      colorScheme=\"red\"\r\n                      variant=\"ghost\"\r\n                      disabled={i === value.length - 1}\r\n                    >\r\n                      <ArrowDownIcon />\r\n                    </Button>\r\n                  </Box>\r\n                </HStack>\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n            </h2>\r\n            <AccordionPanel pb={4}>\r\n              <EmbeddedEditor\r\n                schema={schema}\r\n                isCreating={isCreating}\r\n                prefix={`${schema.key}[${i}]`}\r\n              />\r\n            </AccordionPanel>\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n\r\n      <Button\r\n        w=\"100%\"\r\n        colorScheme=\"red\"\r\n        variant=\"ghost\"\r\n        fontSize=\"3xl\"\r\n        onClick={() => formik.setFieldValue(`${name}[${value.length}]`, null)}\r\n      >\r\n        +\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nEmbeddedArray.grid = EmbeddedEditor.grid;\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport EmbeddedEditor from \"./EmbeddedEditor\";\r\n\r\nexport default function EmbeddedObject({ schema, isCreating }) {\r\n  return (\r\n    <Box pl={3} flex={1} borderLeft=\"1px solid\" borderColor=\"red.500\">\r\n      <EmbeddedEditor\r\n        schema={schema}\r\n        isCreating={isCreating}\r\n        prefix={schema.key}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nEmbeddedObject.grid = EmbeddedEditor.grid;\r\n","import { ArrowUpIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport {\n  AspectRatio,\n  Box,\n  Button,\n  Center,\n  Circle,\n  Image,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { ErrorMessage } from \"formik\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport useRequest from \"../../../utils/useRequest\";\nimport useRequestRunner from \"../../../utils/useRequestRunner\";\n\nexport default function FileOne({ name, value, onChange }) {\n  const [dragOver, setDragOver] = useState(false);\n\n  const uploadsApi = useRequest(\"/api/file-upload\");\n  const uploadHandler = useRequestRunner();\n\n  useEffect(() => {\n    const v = value && typeof value == \"object\" ? value.id : value;\n    if (v) uploadHandler.run(uploadsApi.get(v));\n    else uploadHandler.setResult(null);\n    //eslint-disable-next-line\n  }, [value]);\n\n  const handleDrag = useCallback(\n    async (event) => {\n      console.log(event);\n      event.preventDefault();\n      setDragOver(false);\n\n      if (\n        event.dataTransfer.items &&\n        event.dataTransfer.items.length === 1 &&\n        event.dataTransfer.items[0].kind === \"file\"\n      ) {\n        const formData = new FormData();\n        formData.append(\"file\", event.dataTransfer.files[0]);\n\n        const result = await uploadHandler.run(\n          uploadsApi.send(\"upload\", formData, \"POST\", {\n            \"Content-Type\": \"multipart/form-data\",\n          })\n        );\n        if (onChange) {\n          onChange({ target: { value: result.id, name: name } });\n        }\n      }\n    },\n    [setDragOver, name, onChange, uploadHandler, uploadsApi]\n  );\n\n  return (\n    <AspectRatio\n      bg={\"gray.800\"}\n      borderRadius={4}\n      overflow=\"hidden\"\n      borderColor=\"gray.500\"\n      ratio={16 / 9}\n    >\n      <Box>\n        {uploadHandler.result && uploadHandler.result.filename && (\n          <Center position=\"absolute\" h=\"100%\" w=\"100%\">\n            <Image src={uploadHandler.result.filename} />\n          </Center>\n        )}\n        <ErrorMessage name={name}>\n          {(msg) => (\n            <Box\n              w=\"100%\"\n              h=\"100%\"\n              bg=\"red.800\"\n              color=\"white\"\n              p={4}\n              children={msg}\n              position=\"absolute\"\n            />\n          )}\n        </ErrorMessage>\n        {uploadHandler.isLoading && (\n          <Center position=\"absolute\" h=\"100%\" w=\"100%\">\n            <Spinner size=\"lg\" color=\"white\" />\n          </Center>\n        )}\n        {dragOver && (\n          <Center\n            position=\"absolute\"\n            h=\"100%\"\n            w=\"100%\"\n            bg={dragOver ? \"#88888866\" : null}\n          >\n            <ArrowUpIcon color=\"white\" fontSize={100} />\n          </Center>\n        )}\n        <Box\n          w=\"100%\"\n          h=\"100%\"\n          onDragOver={(event) => {\n            event.preventDefault();\n            setDragOver(true);\n          }}\n          onDragLeave={() => setDragOver(false)}\n          onDrop={handleDrag}\n          position=\"absolute\"\n          display=\"flex\"\n          flexDir=\"row-reverse\"\n        >\n          {value && (\n            <Circle size=\"1.75em\" m={1.5} overflow=\"hidden\">\n              <Button\n                colorScheme=\"red\"\n                onClick={() =>\n                  onChange && onChange({ target: { value: null, name: name } })\n                }\n              >\n                <DeleteIcon />\n              </Button>\n            </Circle>\n          )}\n        </Box>\n      </Box>\n    </AspectRatio>\n  );\n}\n\nFileOne.grid = [1, 2];\n","import {\r\n  FormControl,\r\n  FormLabel,\r\n  GridItem,\r\n  Input,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport { connect, Field } from \"formik\";\r\nimport React from \"react\";\r\nimport Bool from \"./Bool\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport EmbeddedArray from \"./EmbeddedArray\";\r\nimport EmbeddedObject from \"./EmbeddedObject\";\r\nimport Enum from \"./Enum\";\r\nimport FileMulti from \"./FileMulti\";\r\nimport FileOne from \"./FileOne\";\r\nimport RelationOne from \"./RelationOne\";\r\n\r\nfunction ConnectSchemaField(EditComponent, addProps = null) {\r\n  return connect(({ schema, isCreating, ...props }) => {\r\n    const disabled = isCreating ? schema.auto : schema.readonly;\r\n    if (schema.auto && schema.readonly) return null;\r\n\r\n    const grid = (schema.grid &&\r\n      (Array.isArray(schema.grid) ? schema.grid : [schema.grid, 1])) ||\r\n      (EditComponent && EditComponent.grid) || [1, 1];\r\n\r\n    return (\r\n      EditComponent && (\r\n        <GridItem\r\n          colSpan={{\r\n            sm: 1,\r\n            lg: Math.min(2, grid[0]),\r\n            \"2xl\": Math.min(3, grid[0]),\r\n          }}\r\n          rowSpan={{\r\n            sm: 1,\r\n            lg: Math.min(2, grid[1]),\r\n            \"2xl\": Math.min(3, grid[1]),\r\n          }}\r\n          h=\"100%\"\r\n        >\r\n          <FormControl minW=\"20%\" h=\"100%\" display=\"flex\" flexDir=\"column\">\r\n            <FormLabel>{schema.name}</FormLabel>\r\n            <Field\r\n              as={EditComponent}\r\n              name={schema.key}\r\n              placeholder={schema.name}\r\n              disabled={disabled}\r\n              schema={schema}\r\n              required={\r\n                !disabled && schema.required && (!schema.private || isCreating)\r\n              }\r\n              {...props}\r\n              {...(addProps || {})}\r\n            />\r\n          </FormControl>\r\n        </GridItem>\r\n      )\r\n    );\r\n  });\r\n}\r\n\r\nexport const FieldComponentMap = {\r\n  default: ConnectSchemaField(Input),\r\n  email: ConnectSchemaField(Input, { type: \"email\" }),\r\n  password: ConnectSchemaField(Input, { type: \"password\" }),\r\n  textarea: ConnectSchemaField(Textarea, { resize: \"none\" }),\r\n  bool: ConnectSchemaField(Bool),\r\n  enum: ConnectSchemaField(Enum),\r\n  relation_one: ConnectSchemaField(RelationOne),\r\n  relation_many: false,\r\n  file: ConnectSchemaField(FileOne),\r\n  file_multi: ConnectSchemaField(FileMulti),\r\n  embedded_object: ConnectSchemaField(EmbeddedObject),\r\n  embedded_array: ConnectSchemaField(EmbeddedArray),\r\n  date: ConnectSchemaField(DatePicker),\r\n  datetime: ConnectSchemaField(DatePicker),\r\n  timestamp: ConnectSchemaField(DatePicker),\r\n};\r\n","import { Switch } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Bool({ formik, name, ...props }) {\r\n  console.log(\"renderbool\");\r\n  return (\r\n    <Switch\r\n      size=\"lg\"\r\n      colorScheme=\"red\"\r\n      {...props}\r\n      log={console.log(formik)}\r\n      isChecked={formik.values && formik.values[name]}\r\n      onChange={() =>\r\n        formik.setFieldValue(name, !(formik.values && formik.values[name]))\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Select } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Enum({ schema, placeholder, ...props }) {\r\n  return (\r\n    <Select {...props}>\r\n      {schema.values.map((v) => (\r\n        <option value={v}>{v}</option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n","import { Select, Skeleton } from \"@chakra-ui/react\";\nimport React, { useContext, useEffect, useMemo } from \"react\";\nimport useRequest from \"../../../utils/useRequest\";\nimport { SchemaContext } from \"./../../../app/SchemaBackend\";\nimport useRequestRunner from \"./../../../utils/useRequestRunner\";\n\nexport default function RelationOne({ schema, placeholder, value, ...props }) {\n  const getSchema = useContext(SchemaContext);\n  const modelSchema = useMemo(\n    () => getSchema(schema.model),\n    [getSchema, schema]\n  );\n\n  const contentHandler = useRequestRunner(\n    useRequest(\n      `/admin/content-manager/${schema.model}${\n        value ? `?${modelSchema.primary}_sort=${value}` : \"\"\n      }`\n    ).list\n  );\n  useEffect(contentHandler.run, [schema]);\n\n  if (value && typeof value === \"object\") value = value[schema.primary];\n\n  const entities = contentHandler.result;\n  const optionList = useMemo(\n    () =>\n      modelSchema &&\n      entities &&\n      entities.map((e) => (\n        <option key={e[modelSchema.primary]} value={e[modelSchema.primary]}>\n          {e[modelSchema.display]}\n        </option>\n      )),\n    [modelSchema, entities]\n  );\n\n  if (contentHandler.isLoading) return <Skeleton h={8} />;\n\n  return (\n    <Select value={value || \"\"} {...props}>\n      <option value=\"\">-</option>\n      {optionList}\n    </Select>\n  );\n}\n","import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Button,\n  FormControl,\n  Grid,\n} from \"@chakra-ui/react\";\nimport FileOne from \"./FileOne\";\n\nexport default function FileMulti({ formik, schema, onChange }) {\n  const name = schema.key;\n  console.log(formik);\n\n  let value = formik.values[name];\n  value = Array.isArray(value) ? value : [];\n\n  return (\n    <FormControl minW=\"20%\">\n      <Accordion allowMultiple>\n        <AccordionItem>\n          <h2>\n            <AccordionButton>\n              <AccordionIcon />\n            </AccordionButton>\n          </h2>\n          <AccordionPanel pb={4}>\n            <Grid\n              templateColumns={{\n                sm: \"repeat(1, 1fr)\",\n                lg: \"repeat(2, 1fr)\",\n                \"2xl\": \"repeat(3, 1fr)\",\n              }}\n              flex={1}\n              gap={6}\n              mb={6}\n            >\n              {value.map((v, i) => (\n                <FileOne\n                  key={i}\n                  value={v}\n                  name={`${name}[${i}]`}\n                  onChange={(event) =>\n                    formik.setFieldValue(event.target.name, event.target.value)\n                  }\n                />\n              ))}\n            </Grid>\n            <Button\n              onClick={() =>\n                formik.setFieldValue(`${name}[${value.length}]`, null)\n              }\n            >\n              New\n            </Button>\n          </AccordionPanel>\n        </AccordionItem>\n      </Accordion>\n    </FormControl>\n  );\n}\n","import { Box, Button, Grid, HStack } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport AlertButton from \"../AlertButton\";\r\nimport { FieldComponentMap } from \"./Fields\";\r\n\r\nexport default function EditorForm({\r\n  schema,\r\n  isCreating,\r\n  contentHandler,\r\n  contentApi,\r\n  id,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Box p={4} bg=\"white\" flex={1}>\r\n      <Grid\r\n        templateColumns={{\r\n          sm: \"repeat(1, 1fr)\",\r\n          lg: \"repeat(2, 1fr)\",\r\n          \"2xl\": \"repeat(3, 1fr)\",\r\n        }}\r\n        flex={1}\r\n        gap={6}\r\n        mb={6}\r\n      >\r\n        {Object.keys(schema.fields).map((fn) => (\r\n          <SchemaField\r\n            key={fn}\r\n            schema={schema.fields[fn]}\r\n            isCreating={isCreating}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      <HStack w=\"100%\" justifyContent=\"space-between\">\r\n        {!isCreating && (\r\n          <AlertButton\r\n            type=\"button\"\r\n            colorScheme=\"red\"\r\n            headerText=\"Deleting\"\r\n            message=\"Are you sure? This action can not be undone!\"\r\n            onClick={() =>\r\n              contentHandler.run(async () => {\r\n                await contentApi.delete(id);\r\n                history.goBack();\r\n              })\r\n            }\r\n          >\r\n            Delete\r\n          </AlertButton>\r\n        )}\r\n        <Button type=\"submit\" colorScheme=\"green\">\r\n          Save\r\n        </Button>\r\n      </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction SchemaField(props) {\r\n  if (props.schema.visible === false) return null;\r\n  const EditComponent =\r\n    FieldComponentMap[props.schema.type] ?? FieldComponentMap.default;\r\n\r\n  if (EditComponent) return <EditComponent {...props} />;\r\n  return null;\r\n}\r\n","import { Box, FormControl, FormLabel, Text } from \"@chakra-ui/react\";\r\nimport { connect } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nexport default function EditorInfo({ schema }) {\r\n  return (\r\n    <Box minW=\"350px\" p={4} bg=\"white\">\r\n      <Text fontWeight=\"bold\" fontSize={20}>\r\n        Information\r\n      </Text>\r\n      {Object.keys(schema.fields).map((f) => (\r\n        <InfoField\r\n          schema={schema.fields[f]}\r\n          key={f}\r\n          name={schema.fields[f].key}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst InfoField = connect(function ({ name, value, formik, schema, ...props }) {\r\n  const v = formik.values && formik.values[name];\r\n  if (schema.auto && schema.readonly && schema.visible !== false)\r\n    return (\r\n      <FormControl>\r\n        <FormLabel>{schema.name}</FormLabel>\r\n        <Text {...props}>\r\n          {(() => {\r\n            if (v && schema.type === \"date\")\r\n              return moment(new Date(v)).format(\"YYYY-MM-DD\");\r\n            else if (v && schema.type === \"datetime\")\r\n              return moment(new Date(v)).format(\"YYYY-MM-DD HH:mm:ss\");\r\n            else if (v && schema.type === \"timestamp\")\r\n              return moment(new Date(v)).format(\"YYYY-MM-DD HH:mm:ss\");\r\n            else if (v && typeof v === \"object\") return v[schema.model_display];\r\n            else if (v != null) return v;\r\n            else return \"-\";\r\n          })()}\r\n        </Text>\r\n      </FormControl>\r\n    );\r\n  return null;\r\n});\r\n","import { Box, Button, HStack, Stack, Text, useToast } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { default as React, useEffect, useMemo } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport GenerateYup from \"../../utils/GenerateYup\";\nimport useRequest from \"../../utils/useRequest\";\nimport useRequestRunner from \"./../../utils/useRequestRunner\";\nimport EditorForm from \"./EditorForm\";\nimport EditorInfo from \"./EditorInfo\";\n\nexport default function EntryEditor({ isCreating, schema }) {\n  const { model, id } = useParams();\n  const history = useHistory();\n  const contentApi = useRequest(`/content-manager/${model}`);\n\n  const toast = useToast();\n\n  const contentHandler = useRequestRunner(() => contentApi.get(id), []);\n  useEffect(() => {\n    if (!contentHandler.error) return;\n    toast({\n      title: \"Server error\",\n      description: contentHandler.error,\n      status: \"error\",\n      duration: 9000,\n      isClosable: true,\n    });\n    contentHandler.setError(null);\n    //eslint-disable-next-line\n  }, [contentHandler.error, contentHandler.resetError, toast]);\n\n  useEffect(() => {\n    if (!isCreating) contentHandler.run();\n    //eslint-disable-next-line\n  }, [isCreating, id]);\n\n  const editorContext = {\n    isCreating,\n    history,\n    schema,\n    id,\n    contentHandler,\n    contentApi,\n  };\n\n  return (\n    <>\n      <Box>\n        <Text fontSize={40} mb={4}>\n          {contentHandler.result && !isCreating\n            ? `${contentHandler.result[schema.display]} (${schema.name})`\n            : schema.name}\n        </Text>\n        <FormikWrapper {...editorContext}>\n          <HStack mb={6}>\n            <Button\n              colorScheme=\"red\"\n              onClick={() => history.goBack()}\n              variant=\"link\"\n            >\n              Back\n            </Button>\n          </HStack>\n          <Stack\n            flex={1}\n            direction={{ sm: \"column\", xl: \"row\" }}\n            alignItems={{ sm: \"stretch\", xl: \"flex-start\" }}\n          >\n            <EditorForm {...editorContext} />\n            {!isCreating && <EditorInfo {...editorContext} />}\n          </Stack>\n        </FormikWrapper>\n      </Box>\n    </>\n  );\n}\n\nfunction FormikWrapper({\n  children,\n  isCreating,\n  schema,\n  id,\n  contentHandler,\n  contentApi,\n}) {\n  const history = useHistory();\n\n  const formikInitialValues = useMemo(() => {\n    const initVals = {};\n    Object.values(schema.fields).forEach((field) => {\n      if (field.default != null && !field.auto)\n        initVals[field.key] = field.default;\n    });\n    return initVals;\n  }, [schema]);\n\n  const validationSchema = GenerateYup(schema);\n  return (\n    <Formik\n      key={contentHandler.result && contentHandler.result[schema.primary]}\n      initialValues={isCreating ? formikInitialValues : contentHandler.result}\n      enableReinitialize={true}\n      validationSchema={validationSchema}\n      onSubmit={async (data) => {\n        console.log(data);\n\n        const result = await contentHandler.run(\n          isCreating ? contentApi.create(data) : contentApi.update(data, id)\n        );\n        if (!result) return;\n        if (isCreating) {\n          history.replace(\"./\" + result[schema.primary]);\n        }\n      }}\n    >\n      {(isCreating || !contentHandler.isLoading) && <Form>{children}</Form>}\n    </Formik>\n  );\n}\n","import * as yup from \"yup\";\n\nexport default function GenerateYup(schema) {\n  if (!schema) return null;\n\n  const result = {};\n\n  Object.keys(schema.fields).forEach((key) => {\n    const field = schema.fields[key];\n    let fieldSchema = null;\n\n    switch (field.type) {\n      case \"file_multi\":\n        fieldSchema = yup.array(\n          yup.lazy((value) => {\n            switch (typeof value) {\n              case \"object\":\n                return yup.object({ id: yup.number().required() });\n              default:\n                return yup.number().required();\n            }\n          })\n        );\n        break;\n      default:\n        break;\n    }\n\n    if (fieldSchema) result[key] = fieldSchema;\n  });\n  return yup.object(result);\n}\n","import { ArrowLeftIcon, ArrowRightIcon } from \"@chakra-ui/icons\";\nimport { Button, HStack, IconButton } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport default function Pagination({ page, max, onSelect, colorScheme }) {\n  page = parseInt(page);\n  const pagerCount = max < 10 ? max : 10;\n  const offset =\n    page - pagerCount / 2 < 0\n      ? 0\n      : page + pagerCount / 2 > max\n      ? max - pagerCount\n      : page - pagerCount / 2;\n  if (max === 1 && page === 1) return null;\n  return (\n    <HStack mx=\"auto\" justifyContent=\"center\" w=\"100%\">\n      <IconButton\n        colorScheme={colorScheme}\n        icon={<ArrowLeftIcon />}\n        variant={\"ghost\"}\n        onClick={() => onSelect(1)}\n        disabled={page <= 1}\n      />\n      {Array.apply(null, Array(pagerCount)).map((_, e) => (\n        <Button\n          colorScheme={colorScheme}\n          variant={e + offset + 1 === page ? \"solid\" : \"ghost\"}\n          onClick={() => onSelect(e + offset + 1)}\n          key={e}\n        >\n          {e + offset + 1}\n        </Button>\n      ))}\n      <IconButton\n        colorScheme={colorScheme}\n        icon={<ArrowRightIcon />}\n        variant={\"ghost\"}\n        onClick={() => onSelect(max)}\n        disabled={page >= max}\n      />\n    </HStack>\n  );\n}\n","import {\n  Box,\n  Button,\n  HStack,\n  Skeleton,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport useRequest from \"../utils/useRequest\";\nimport useRequestRunner from \"../utils/useRequestRunner\";\nimport Pagination from \"./Pagination\";\n\nconst displayFormatter = {\n  timestamp: (v) =>\n    v ? moment(new Date(v)).format(\"YYYY-MM-DD HH:mm:ss\") : \"-\",\n  datetime: (v) =>\n    v ? moment(new Date(v)).format(\"YYYY-MM-DD HH:mm:ss\") : \"-\",\n  date: (v) => (v ? moment(new Date(v)).format(\"YYYY-MM-DD\") : \"-\"),\n  password: false,\n  relation_many: false,\n  file: false,\n  json: false,\n  bool: (v) => (v ? \"true\" : \"false\"),\n  default: (v, s) => {\n    if (v && typeof v === \"object\" && s.display) {\n      if (v[s.display] != null) return String(v[s.display]);\n      return \"-\";\n    }\n    if (v == null) return \"-\";\n    return String(v);\n  },\n  embedded_array: false,\n  file_multi: false,\n  relation_multi: false,\n};\n\nexport default function ListEntries({ schema }) {\n  const { model } = useParams();\n  const history = useHistory();\n  const page = new URLSearchParams(history.location.search).get(\"page\") || 1;\n\n  const contentApi = useRequest(`/content-manager/${model}`);\n  const [entryCount, setEntryCount] = useState(0);\n\n  const contentHandler = useRequestRunner(contentApi.list, []);\n  useEffect(() => {\n    (async () => {\n      const count = await contentHandler.runError(\n        contentHandler.runStatus(contentApi.get(\"count\"))\n      );\n      if (count == null) return;\n      setEntryCount(count);\n      contentHandler.run(\n        contentApi.send(`?_limit=100&_start=${(page - 1) * 100}`)\n      );\n    })();\n    //eslint-disable-next-line\n  }, [page, schema]);\n\n  const names = useMemo(() => {\n    if (schema && schema.listing && Array.isArray(schema.listing))\n      return schema.listing;\n    if (schema && schema.listing) return [schema.listing];\n    return Object.keys(schema.fields).filter(\n      (n) =>\n        displayFormatter[schema.fields[n].type] !== false &&\n        !schema.fields[n].private &&\n        schema.fields[n].visible &&\n        schema.fields[n].listed\n    );\n  }, [schema]);\n\n  return (\n    <Box>\n      <Text fontSize={40} mb={4}>\n        {schema.name}\n      </Text>\n      <Skeleton isLoaded={!contentHandler.isLoading}>\n        <Pagination\n          page={page}\n          max={Math.ceil(entryCount / 100) || 1}\n          colorScheme=\"red\"\n          onSelect={(page) => history.push(\"?page=\" + page)}\n        />\n        <HStack mb={6}>\n          {schema.editable && (\n            <Button\n              colorScheme=\"red\"\n              aria-label=\"Search database\"\n              onClick={() =>\n                history.push(history.location.pathname + \"/create\")\n              }\n              variant=\"link\"\n            >\n              New\n            </Button>\n          )}\n        </HStack>\n        <Table mb={6}>\n          <Thead>\n            <Tr>\n              {names.map((n) => (\n                <Th key={n}>{n}</Th>\n              ))}\n            </Tr>\n          </Thead>\n          <Tbody>\n            {contentHandler.result &&\n              contentHandler.result.map((e, i) => (\n                <Tr\n                  key={e[schema.primary] || i}\n                  onClick={() =>\n                    schema.editable &&\n                    history.push(\n                      history.location.pathname + \"/\" + e[schema.primary]\n                    )\n                  }\n                >\n                  {names.map((n) => (\n                    <Td key={n}>\n                      {schema.fields[n] &&\n                        (\n                          displayFormatter[schema.fields[n].type] ||\n                          displayFormatter.default\n                        )(e[n], schema.fields[n])}\n                    </Td>\n                  ))}\n                </Tr>\n              ))}\n          </Tbody>\n        </Table>\n        <Pagination\n          page={page}\n          max={Math.ceil(entryCount / 100) || 1}\n          colorScheme=\"red\"\n          onSelect={(page) => history.push(\"?page=\" + page)}\n        />\n      </Skeleton>\n    </Box>\n  );\n}\n","import React, { useContext, useMemo } from \"react\";\nimport { Route, Switch, useParams } from \"react-router\";\nimport { SchemaContext } from \"./../app/SchemaBackend\";\nimport EntryEditor from \"./EntryEditor\";\nimport ListEntries from \"./ListEntries\";\n\nexport default function ContentType({ match }) {\n  const { model } = useParams();\n  const getSchema = useContext(SchemaContext);\n  const schema = useMemo(() => getSchema(model), [getSchema, model]);\n\n  return (\n    schema && (\n      <Switch>\n        <Route path={`${match.path}/create`}>\n          <EntryEditor key={schema.key} isCreating={true} schema={schema} />\n        </Route>\n        <Route path={`${match.path}/:id`}>\n          <EntryEditor key={schema.key} isCreating={false} schema={schema} />\n        </Route>\n        <Route path={match.path} exact>\n          <ListEntries key={schema.key} schema={schema} />\n        </Route>\n      </Switch>\n    )\n  );\n}\n","import { useContext } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Login from \"../pages/Login\";\r\nimport { AuthConext } from \"./../auth/auth\";\r\nimport ContentType from \"./../components/ContentType\";\r\n\r\nexport default function PageRouting() {\r\n  const auth = useContext(AuthConext);\r\n\r\n  return (\r\n    <Switch>\r\n      {!auth.user && <Redirect to=\"/login\" />}\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/content-type/:model\" component={ContentType} />\r\n    </Switch>\r\n  );\r\n}\r\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { AuthBackend } from \"../auth/auth\";\nimport Layout from \"../layout\";\nimport \"./App.css\";\nimport LocationBackend from \"./LocationBackend\";\nimport PageRouting from \"./PageRouting\";\nimport SchemaBackend from \"./SchemaBackend\";\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n  return (\n    <LocationBackend>\n      <ChakraProvider>\n        <AuthBackend>\n          <SchemaBackend>\n            <Layout>\n              <PageRouting />\n            </Layout>\n          </SchemaBackend>\n        </AuthBackend>\n      </ChakraProvider>\n    </LocationBackend>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}